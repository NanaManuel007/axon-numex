// This file is auto-generated by the `update-kc-gen` command. Do not edit it manually.
// Hash: ef054440eb7cb792051fc1695577b0cf7f2f22a54c41e4b02809936aa7400af6


/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

import { lazy, Suspense, type ReactNode } from "react";

export type ThemeName = "keycloakify-starter";

export const themeNames: ThemeName[] = ["keycloakify-starter"];

export type KcEnvName = "TERMS_AND_POLICY_URL" | "FORGOT_PASSOWRD";

export const kcEnvNames: KcEnvName[] = ["TERMS_AND_POLICY_URL", "FORGOT_PASSOWRD"];

export const kcEnvDefaults: Record<KcEnvName, string> = {
  "TERMS_AND_POLICY_URL": "https://www.google.com/",
  "FORGOT_PASSOWRD": "https://www.google.com/"
};

/**
 * NOTE: Do not import this type except maybe in your entrypoint. 
 * If you need to import the KcContext import it either from src/login/KcContext.ts or src/account/KcContext.ts.
 * Depending on the theme type you are working on.
 */
export type KcContext =
    | import("./login/KcContext").KcContext
    ;

declare global {
    interface Window {
        kcContext?: KcContext;
    }
}

export const KcLoginPage = lazy(() => import("./login/KcPage"));

export function KcPage(
    props: {
        kcContext: KcContext;
        fallback?: ReactNode;
    }
) {
    const { kcContext, fallback } = props;
    return (
        <Suspense fallback={fallback}>
            {(() => {
                switch (kcContext.themeType) {
                    case "login": return <KcLoginPage kcContext={kcContext} />;
                }
            })()}
        </Suspense>
    );
}
